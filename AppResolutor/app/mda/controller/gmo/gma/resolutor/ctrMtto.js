/*
 * File: app/mda/controller/gmo/gma/resolutor/ctrMtto.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('gma.controller.gmo.gma.resolutor.ctrMtto', {
    extend: 'Ext.app.Controller',

    alternateClassName: [
        'gmo.gma.resolutor.ctrMtto'
    ],

    refs: [
        {
            ref: 'Mtto',
            selector: '#wingmaResolutor'
        }
    ],

    onBtnCerrarClick: function(button, e, eOpts) {
                button.up('window').close();
    },

    onBtnRecuperarClick: function(button, e, eOpts) {
                var me = this,

                    win = me.getMtto(),

                    ls_criterio = win.down('#txtcriterio').getValue(),

                    st_glprofile = win.down('#grdglprofile').getStore();

                    st_glprofile.getProxy().extraParams={
                        'operacion'	 : 2,
                        'pai_codigo' :0,
                        'criterio':ls_criterio
                    };

                     st_glprofile.loadPage(1);

    },

    onBtnAdicionarClick: function(button, e, eOpts) {
        var me = this,

            win = me.getMtto(),

            grd_glprofile = win.down('#grdglprofile'),

            grd_resolutor = win.down('#grdgmaresolutor'),

            st_resolutor = grd_resolutor.getStore(),

            ln_count = st_resolutor.getCount(),

            sm_glprofile = grd_glprofile.getSelectionModel();


        if (sm_glprofile.hasSelection()===false){

            Ext.MessageBox.alert('Mensaje','Debe seleccionar usuario que desea agregar como resolutor');

            return;
        }

        var lb_estado=true,

            rec_glprofile = sm_glprofile.getSelection()[0],

            rec_resolutor = Ext.create('gma.model.gmo.gma.resolutor.mdresolutor');

        Ext.each(st_resolutor.getRange(), function(item) {

            if (( item.get('per_codigo') === rec_glprofile.data.per_codigo) && (item.get('rse_nivel')===1)) {

                lb_estado=false;
            }
        });


        if (lb_estado===false){

            Ext.MessageBox.show({
                title  : 'Mensaje' ,
                msg    : 'Usuario ya se encuentra seleccionado',
                buttons: Ext.MessageBox.OK,
                icon   : Ext.MessageBox.INFO
            });

            return;
        }

        rec_resolutor.set('rse_codigo',0);

        rec_resolutor.set('pai_codigo',win.down('#pai_codigo').getValue());

        rec_resolutor.set('srv_codigo',win.down('#srv_codigo').getValue());

        rec_resolutor.set('per_codigo',rec_glprofile.data.per_codigo);

        rec_resolutor.set('per_nombrecompleto',rec_glprofile.data.per_nombrecompleto);

        rec_resolutor.set('per_nrodocidentidad',rec_glprofile.data.per_nrodocidentidad);

        rec_resolutor.set('ema_denominacion',rec_glprofile.ema_denominacion);

        rec_resolutor.set('rse_nivel',1);

        rec_resolutor.set('rse_estado',1);

        st_resolutor.insert(ln_count,rec_resolutor);
    },

    onBtnEliminarClick: function(button, e, eOpts) {
                    var me = this,

                        win = me.getMtto(),

                        grd = win.down('#grdgmaresolutor'),

                        st_resolutor = grd.getStore(),

                        sm = grd.getSelectionModel();

                        if (sm.hasSelection()===false){

                                Ext.MessageBox.show({
                                        title  : 'Mensaje' ,
                                        msg    : 'Debe seleccionar registro a eliminar',
                                        buttons: Ext.MessageBox.OK,
                                        icon   : Ext.MessageBox.WARNING
                                    });

                        }


                        var rec = sm.getSelection()[0];

                        if (rec.data.rse_codigo===0){

                            grd.getStore().remove(rec);
                        }
                        else{
                                Ext.MessageBox.confirm('Mensaje','Desea anular registro seleccionado',function(rsp){

                                if(rsp==='yes'){

                                    rec.set('rse_estado',2);
                                }

                             });
                         }
    },

    onWingmaResolutorAfterRender: function(component, eOpts) {
            var me = this,

                win = me.getMtto(),

                st_pais = win.down('#pai_codigo').getStore(),

                srv_codigo = win.down('#srv_codigo'),

                st_serv = win.down('#srv_codigo').getStore();

                st_pais.load({
                    params:{
                        'operacion':2
                        }
                });

                st_serv.load({
                    params:{
                        'operacion':2,
                        'srv_codigo':0,
                        'criterio':'%'
                    },
                    callback: function(records,options,success){
                         if(success && records[0]!==undefined){
                               srv_codigo.setValue(records[0].data.srv_codigo);
                         }
                    }
                });
    },

    onSrv_codigoChange: function(field, newValue, oldValue, eOpts) {
                var me = this,

                    win = me.getMtto(),

                    ln_pai_codigo = win.down('#pai_codigo').getValue(),

                    st_resolutor = win.down('#grdgmaresolutor').getStore();

                    st_resolutor.load({
                        params:{
                            'operacion':3,
                            'pai_codigo':ln_pai_codigo,
                            'srv_codigo': newValue
                        }
                    });
    },

    onBtnGuardarClick: function(button, e, eOpts) {
                var me = this,

                    win = me.getMtto(),

                    frm = win.down('#frmgmaresolutor'),

                    ln_accion = win.down('#accion').getValue(),
                    ln_pai_codigo= win.down('#pai_codigo').getValue(),
                    ln_srv_codigo = win.down('#srv_codigo').getValue(),
                    st_resolutor = win.down('#grdgmaresolutor').getStore(),
                    rse_codigo=[],
                    per_codigo=[],
                    rse_nivel=[],
                    rse_estado=[];

                    if (frm.isValid()===false){

                        Ext.MessageBox.show({
                            title  : 'Mensaje' ,
                            msg    : 'Datos de formulario incompleto',
                            buttons: Ext.MessageBox.OK,
                            icon   : Ext.MessageBox.WARNING
                        });

                        return;
                    }

                Ext.each(st_resolutor.getRange(), function(record){
                    rse_codigo.push(record.get('rse_codigo'));
                    per_codigo.push(record.get('per_codigo'));
                    rse_nivel.push(record.get('rse_nivel'));
                    rse_estado.push(record.get('rse_estado'));
                });

            frm.submit({
                success: function(form, action){

                    var objJson =Ext.JSON.decode(action.response.responseText);
                    if (objJson.success){

                        Ext.MessageBox.alert('Mensaje',objJson.msg);

                        st_resolutor.load({
                            params:{
                                'operacion':3,
                                'pai_codigo':ln_pai_codigo,
                                'srv_codigo':ln_srv_codigo
                            }
                        });

                    }
                },
                failure: function(form,action){

                    var objJson =Ext.JSON.decode(action.response.responseText);

                    Ext.MessageBox.alert('Mensaje',objJson.msgError);

            },
            params:{
                'operacion':1,
                'accion':ln_accion,
                'pai_codigo':ln_pai_codigo,
                'srv_codigo':ln_srv_codigo,
                'rse_codigo[]':rse_codigo,
                'per_codigo[]':per_codigo,
                'rse_nivel[]':rse_nivel,
                'rse_estado[]':rse_estado}

        });


    },

    onGrvglprofileItemDblClick: function(dataview, record, item, index, e, eOpts) {
                var me = this,

                    win = me.getMtto(),

                    btn_adicionar = win.down('#btnAdicionar');

                    me.onBtnAdicionarClick(me,me.btn_adicionar);

    },

    onTxtcriterioSpecialkey: function(field, e, eOpts) {
                var me = this,

                    win = me.getMtto(),

                    btn_recuperar = win.down('#btnRecuperar');

                    if(e.getKey()==e.ENTER){

                        me.onBtnRecuperarClick(me,me.btn_recuperar);
                     }
    },

    init: function(application) {
        this.control({
            "#wingmaResolutor #btnCerrar": {
                click: this.onBtnCerrarClick
            },
            "#wingmaResolutor #btnRecuperar": {
                click: this.onBtnRecuperarClick
            },
            "#wingmaResolutor #btnAdicionar": {
                click: this.onBtnAdicionarClick
            },
            "#wingmaResolutor #btnEliminar": {
                click: this.onBtnEliminarClick
            },
            "#wingmaResolutor": {
                afterrender: this.onWingmaResolutorAfterRender
            },
            "#wingmaResolutor #srv_codigo": {
                change: this.onSrv_codigoChange
            },
            "#wingmaResolutor #btnGuardar": {
                click: this.onBtnGuardarClick
            },
            "#wingmaResolutor #grvglprofile": {
                itemdblclick: this.onGrvglprofileItemDblClick
            },
            "#wingmaResolutor  #txtcriterio": {
                specialkey: this.onTxtcriterioSpecialkey
            }
        });
    }

});
